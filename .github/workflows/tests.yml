# SPDX-FileCopyrightText: Atlas Engineer LLC
# SPDX-License-Identifier: BSD-3-Clause

name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [ opened, synchronize, closed ]

jobs:
  test:
    name: ${{ matrix.lisp }} on ${{ matrix.os }}
    strategy:
      matrix:
        # Use ccl-bin/1.12.1 instead of 'ccl' because of
        # https://github.com/roswell/roswell/issues/534.
        # TODO: Revert when Roswell is functional again.
        lisp: [sbcl-bin, ccl-bin/1.12.1, ecl/21.2.1]
        rosargs: [dynamic-space-size=3072]
        os: [ubuntu-latest, macos-latest] # try windows-latest when we understand commands to install Roswell on it

    # run the job on every combination of "lisp" and "os" above
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        show-progress: 'false'
        submodules: 'true'

    - name: Register submodules in ASDF
      run: |
        mkdir -p ~/.config/common-lisp/source-registry.conf.d/
        echo "(:tree \"$PWD\")" > ~/.config/common-lisp/source-registry.conf.d/asdf.conf
        echo "(:tree \"$PWD/_build\")" >> ~/.config/common-lisp/source-registry.conf.d/asdf.conf

    - name: Install Roswell
      env:
       LISP: ${{ matrix.lisp }}
      run: curl -L https://raw.githubusercontent.com/roswell/roswell/master/scripts/install-for-ci.sh | sh -x

    - name: Run tests
      run: |
        ros -e '(handler-case (asdf:load-system :prompter/tests) (error (c) (format t "Error: ~s~%~a~%" c c) (uiop:quit 1)))' \
            -e '(let ((output (lisp-unit2:run-tests :package :prompter/tests))) (lisp-unit2:print-summary output) (when (or (lisp-unit2:failed output) (lisp-unit2:errors output)) (uiop:quit 1)))'
